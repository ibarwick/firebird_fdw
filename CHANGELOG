Revision history for firebird_fdw

1.2.3	2022-02-11
	- Fix bug in rescan handling

1.2.2	2021-09-15
	- Invalid Firebird server port numbers will be rejected
	- Enable provision of custom Firebird port for TAP tests
	- Support PostgreSQL 14
	- Adapt for API changes introduced in PostgreSQL 11+
	- Support for versions earlier than PostgreSQL 9.3 removed
	- Ensure non-superusers can execute firebird_version()

1.2.1	2020-10-21
	- Fix builds for recent Fedora versions

1.2.0	2020-10-17
	- Add support for PostgreSQL 13
	- Add support for generated columns (PostgreSQL 12 and later)
	- Add support for COPY and partition tuple routing (PostgreSQL 11 and later)
	- Add table/column option "quote_identifier"
	- Add server option "quote_identifiers"
	- Have IMPORT FOREIGN SCHEMA add "quote_identifier" where appropriate
	- Add support for implicit boolean columns
	- Push down boolean tests in WHERE clauses where possible
	- Add function firebird_fdw_server_options()
	- Add function firebird_version()
	- When analyzing a foreign table, only retrieve the columns defined in
	  that table
	- Have EXPLAIN for a remote modify show the Firebird query used
	- If a remote query fails, log the query as CONTEXT
	- Explicitly reject INSERT with ON CONFLICT clause
	- Fix UPDATE statements where a BEFORE ROW UPDATE trigger is present
	- Apply CREATE SERVER's "port" option, if provided
	- Prevent tables defined as queries from being set as "updatable = 'true'"

1.1.0	2019-05-31
	- Add utility function "firebird_fdw_close_connections()"
	- Add utility function "firebird_fdw_diag()"
	- Adapt code to deal with tuple-level OID removal in PostgreSQL 12
	- Support for heap access method changes in PostgreSQL 12

1.0.0	2018-11-09
	- Support Firebird BOOLEAN datatype (Firebird 3.0 and later)
	- Improve "IMPORT FOREIGN SCHEMA" implementation
	- Add table option "estimated_row_count"
	- Improve handling of foreign tables defined as Firebird queries
	- Support PostgreSQL 11
	- Adapt code to compile against current PostgreSQL HEAD
	- Avoid segfault if not all expected Firebird connection parameters
	  were supplied

0.5.0	2018-10-12
	- Support triggers on foreign tables (PostgreSQL 9.4 and later)
	- Support Firebird BLOB datatype (TEXT subtype only)

0.4.0   2018-10-02
	- Add function firebird_fdw_version()
	- Add TAP tests
	- Fix bug in INSERT ... RETURNING ...
	- Miscellaneous minor bug fixes and code cleanup

0.3.0   2018-04-22
	- Support PostgreSQL 9.6 and 10
	- Add support for IMPORT FOREIGN SCHEMA (PostgreSQL 9.5 and later)
	- Ensure tables defined with the 'query' option actually work
	- Automatically reconnect if Firebird goes away
	- Update function calls for changes in libfq 0.2.0
	- Improve SIGINT handling
	- Improve error message handling
	- Fix memory error when generating connection string
	- Fix crash when multibyte string overflows (GitHub #5)
	- Report transaction errors as actual errors; log harmless
	  unhandled transaction types as DEBUG rather than as WARNING
	- General code cleanup

0.2.5   2014-02-11
        - Add RPM spec files for openSUSE and Red Hat

0.2.4   2014-02-06
        - libfq now supports a "client_encoding" connection parameter,
          which enables us to cover most reasonably common encoding
          combinations by passing the value provided by
          GetDatabaseEncodingName() to Firebird. See caveat in code
          regarding compatibility between PostgreSQL and Firebird encoding
          names.

0.2.3   2014-02-02
        - Default to PostgreSQL table name if no 'table_name' option
          explicitly provided

0.2.2   2014-01-25
        - Implement basic transaction support

0.2.1   2014-01-23
        - Make extension compatible with PostgreSQL 9.2
        - Fix some regressions

0.2.0   2014-01-23
        - Implement basic connection caching
        - Fix implicit cast handling

0.1.6   2014-01-21
        - Push down bitwise operators << and >> (FB 2.1 and later)
        - Push down two-argument form of SUBSTRING()
        - Push down CONCAT()
        - Push down POSITION() / STRPOS()
        - Don't check for mutable functions - we are explicitly
          whitelisting functions which can be pushed down
          (need to double-check if that's a valid approach)

0.1.5   2014-01-20
        - Add basic Firebird version detection to ensure that only
          functions available on the remote Firebird server are actually
          pushed down
        - Push down functions COALESCE(), NULLIF()
        - Only push down SUBSTRING() if 2nd and 3rd arguments are INTs

0.1.4   2014-01-13
        - Prevent implicit casts from being pushed down to Firebird

0.1.3   2014-01-13
        - Partial pushdown of functions in WHERE clauses to Firebird
        - Ensure parameter "disable_pushdowns" is treated as a boolean
        - Add CREATE FOREIGN SERVER/CREATE FOREIGN TABLE parameter
          "updatable", matching the postgres_fdw parameter

0.1.2   2014-01-11
        - Partial pushdown of WHERE clauses to Firebird
        - new CREATE FOREIGN SERVER parameter "disable_pushdowns"
        - CREATE FOREIGN TABLE parameter "table" renamed to "table_name"
          (matching the postgres_fdw parameter and for consistency with the
          column option "column_name")

0.1.1   2014-01-01
        - Add support for column aliases (column option "column_name")

0.1.0   2014-01-01
        - Initial public release
